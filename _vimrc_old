set nocompatible

filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'
Plugin 'vim-scripts/indentpython.vim'
call vundle#end()
filetype plugin indent on

set autoread
set autowriteall
set nu
"colo evening
colo desert
set ruler
"set background=light
"set cindent
set cino=j1
set fileencodings=utf8,gb2312,big5,euc-cn
set formatoptions=rotcql
"set ic	"ignore case
set ignorecase smartcase
"set incsearch

set smarttab
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab
set autoindent

set wildmenu
set showcmd
set backspace=indent,eol,start
set mouse=a

let python_highlight_all=1
:syntax on

let Tlist_Ctags_Cmd='/usr/bin/ctags'
set ofu=syntaxcomplete#Complete
highlight OverLength ctermbg=red ctermfg=white guibg=#592929
match OverLength /\%81v.\+/
"autocmd FileType python nnoremap <LocalLeader>= :0,$!yapf<CR>

"git
"git config --global merge.tool vimdiff
"git config --global mergetool.prompt false
set laststatus=2 
set statusline=%-10.3n
map <silent> <leader>1 :diffget 1<CR> :diffupdate<CR>
map <silent> <leader>2 :diffget 2<CR> :diffupdate<CR>
map <silent> <leader>3 :diffget 3<CR> :diffupdate<CR>
map <silent> <leader>4 :diffget 4<CR> :diffupdate<CR>

set foldmethod=indent
set foldlevel=99

"auto add pyhton header --start  
autocmd BufNewFile *.py 0r ~/.vim/vim_template/vim_python_header
autocmd BufNewFile *.py ks|call FileName()|'s  
autocmd BufNewFile *.py ks|call CreatedTime()|'s  
  
fun FileName()  
    if line("$") > 10  
        let l = 10  "这里是字母L 不是数字1   
    else  
        let l = line("$")  
    endif   
    exe "1," . l . "g/File Name:.*/s/File Name:.*/File Name: " .expand("%")    
endfun   
  
fun CreatedTime()  
    if line("$") > 10  
        let l = 10  
    else  
        let l = line("$")  
    endif   
    exe "1," . l . "g/Created Time:.*/s/Created Time:.*/Created Time: " .strftime("%Y-%m-%d %T")   
endfun   
"auto add python header --end  


"Taglist 运行TlistToggle 打开，再运行关闭TlistToggle
"使用Ctrl+W切换窗口和编辑区
let Tlist_Show_One_File=1
let Tlist_Exit_OnlyWindow=1
"map S :TlistToggle <CR>

"ctags cscope
"Ctrl-] 跳转光标所在定义， Ctrl+t 回到上次跳转前的位置
"生成ctags cscope文件
map <F5><ESC> :call GenTags()<CR>
func! GenTags()
exec "w"
exec "!find . -name \"*.h\" -o -name \"*.c\" -o -name \"*.hpp\" -o -name \"*.cpp\" -o -name \"*.cc\" > cscope.files"
exec "!cscope -Rbq -i cscope.files"
exec "!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q ."
exec "cs kill -1"
exec "cs add cscope.out"
endfunc

set cscopequickfix=s-,c-,d-,i-,t-,e-

"OmniCppComplete
set nocp

"SuperTab
let g:SuperTabDefaultCompletionType="context"


"minibuffer
let g:miniBufExplMapWindowNavVim = 1   
let g:miniBufExplMapWindowNavArrows = 1  
let g:miniBufExplMapCTabSwitchBufs = 1 
let g:miniBufExplModSelTarget = 1  
let g:miniBufExplMoreThanOne=0  

"winmanager
let g:NERDTree_title="[NERDTree]"
let g:winManagerWindowLayout="NERDTree|TagList"

function! NERDTree_Start()
	exec 'NERDTree'
endfunction 

function! NERDTree_IsValid()
	return 1
endfunction

"cscope查找
"查找本c符号，跳过注释
nmap cfs :cs find s <C-R>=expand("<cword>")<CR><CR>
"
"查找本定义
nmap cfg :cs find g <C-R>=expand("<cword>")<CR><CR>
"
"查找本函数调用的函数
nmap cfd :cs find d <C-R>=expand("<cword>")<CR><CR>
"
"查找调用本函数的函数
nmap cfc :cs find c <C-R>=expand("<cword>")<CR><CR>
"
"查找本字符串
nmap cft :cs find t <C-R>=expand("<cword>")<CR><CR>
"
"查找本egrep模式
nmap cfe :cs find e <C-R>=expand("<cword>")<CR><CR>
"
"查找本文件
nmap cff :cs find f <C-R>=expand("<cfile>")<CR><CR>  
"
"查找包含本文件的文件
nmap cfi :cs find i <C-R>=expand("<cword>")<CR><CR>  

"make
nmap M :make<CR>

"quickfix窗口打开
nmap E :copen<CR>

"quickfix窗口关闭
nmap C :cclose<CR>

"保存所有文件
nmap W :wa<CR>

"关闭补全提示窗口
nmap , :pclose<CR>

"bn下一个文件，bp前一个文件
nmap L :bn<CR>
nmap H :bp<CR>

"IDE模式j
nmap wm :WMToggle<CR>

"运行
map <F7> :call CompileRun()<CR>
func! CompileRun()
exec "w"
if &filetype == 'c'
  exec "!time g++ % -g -o %< -std=c++11 -ldl -lrt -lpthread"
elseif &filetype == 'cpp'
  exec "!time g++ % -g -o %< -std=c++11 -ldl -lrt -lpthread"
elseif &filetype == 'python'
  exec "!time python3 %"
endif
endfunc

"格式化文件
"nmap F :!astyle_sh -cs2CSKNwYMm2pPDHk1n % >/dev/null <CR>
nmap F :!/bin/astyle_sh % <CR>

